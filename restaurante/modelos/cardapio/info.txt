Criamos 3 classes .
Uma classe mãe item_cardapio. 
e 2 classes ('bebida', 'prato').
que vao herdadar o construtor da classe mae item_cardapio.

Importamos primeiro. 
from modelos.cardapio.item_cardapio import ItemCardapio

class Bebida(ItemCardapio):                                         | passamos como parametro a classe.(ItemCardapio)
    def __init__(self, nome, preco, tamanho) -> None:
        super().__init__(nome, preco)                               | super().__init__         >> pega o construtor do ItemCardapio.
        self._tamanho = tamanho
    
    def __str__(self):
        return self._nome
fazemos o mesmo para classe Prato. 

------Resumo:
Criamos a classe principal chamada ItemCardapio com um construtor que aceita os parâmetros nome e preço;
Implementamos duas classes chamadas Bebida e Prato que herdam atributos e métodos da classe ItemCardapio, utilizando super() no construtor para aproveitar a estrutura da classe pai;
Criamos objetos das classes Prato e Bebida, demonstrando como a herança pode ser utilizada para compartilhar funcionalidades entre diferentes tipos de itens de cardápio.
-------------------------------
Criamos uma Classe Abstrata: Pega um metodo de modelo para que todas as outras classes tenham o metodo. 
1- Importamos no item_cardapio. 
from abc import ABC, abstractmethod              |    @abstractmethod = obriga que todas as classes precisa ter esse metodo. 

2- Na classe usamos como parametro ABC 
class ItemCardapio(ABC):

3- dps usamos o @abstractmethod e definimos uma funcao.
    @abstractmethod
    def aplicar_desconto():
        pass
Obs: não necessariamente precisamos saber o desconto das outras classes . apenas obrigamos ela a ter essa funcao.

4- Agora em prato.py/bebida.py criamos o metodo aplicar_desconto.
Ex: prato.py          o mesmo se aplica pro bebida.py.
    def aplicar_desconto(self):
        self._preco -= (self._preco * 0.05)                    |  aqui aplicamos um desconto de 5%. 

5- no app.py aplicamos o desconto dps de criar o objeto.
bebida_suco = Bebida('Suco De Maracuja', 5.0, 'Grande')
prato_pao = Prato('Paozinho', 2.00, 'O melhor pão da cidade')
bebida_suco.aplicar_desconto()
prato_pao.aplicar_desconto()

